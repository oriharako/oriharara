<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\Models\Post;

use App\User;

use App\Models\Comment;

use Illuminate\Support\Facades\DB;

class PostsController extends Controller
{
    //
public function index(Request $request)
    {

	$search = $request->input('search');
	
	$query = DB::table('posts');
	//もしキーワードがあったら
	if (!empty($search)) {
		$search_split = mb_convert_kana($search, 's');

		 $search_split2 = preg_split('/[\s]+/', $search_split, -1, PREG_SPLIT_NO_EMPTY);

		foreach ($search_split2 as $value) {
		$query->where('body', '=', $search)->get();
		}
	}

	$posts = Post::orderBy('created_at', 'desc')->paginate(10);
  
        return view('posts.index', ['posts' => $posts]);


    }
public function create()
{
    $id = $request->session()->get('id');
    return view('posts.create')->with('id', $id);
}

public function store(Request $request)
{
    $params = $request->validate([
        'title' => 'required|max:50',
        'body' => 'required|max:2000',
    ]);

    Post::create($params);

    return redirect()->route('posts.index');
}
 public function show($post_id)
{
    $post = Post::findOrFail($post_id);

    return view('posts.show', [
        'post' => $post,
    ]);
}
public function edit($post_id)
{
    $post = Post::findOrFail($post_id);

    return view('posts.edit', [
        'post' => $post,
    ]);
}

public function update($post_id, Request $request)
{
    $params = $request->validate([
        'title' => 'required|max:50',
        'body' => 'required|max:2000',
    ]);

    $post = Post::findOrFail($post_id);
    $post->fill($params)->save();

    return redirect()->route('posts.show', ['post' => $post]);
}
public function destroy($post_id)
{
    $post = Post::findOrFail($post_id);

    \DB::transaction(function () use ($post) {
        $post->comments()->delete();
        $post->delete();
    });

    return redirect()->route('posts.index');
}


}
